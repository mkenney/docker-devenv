#!/bin/bash

OPTIND=1

show_help=0
restart=0
stop=0

while getopts "hrs" opt; do
    case "$opt" in
    h)
        show_help=1
        shift
        ;;
    r)  restart=1
        shift
        ;;
    s)  stop=1
        shift
        ;;
    esac
done

#
# Project path and container name
#
if [ "" == "${1}" ]; then
	project_path=$(realpath ".")
else
	project_path=$(realpath "${1}")
fi
project_name=$(basename $project_path)
container_name=dev-${project_name}

#
# Container state
#
running=$(docker inspect --format="{{ .State.Running }}" ${container_name} 2> /dev/null)
if [ $? -eq 1 ]; then
	running='false'
fi
ghost=$(docker inspect --format="{{ .State.Ghost }}" ${container_name} 2> /dev/null)
paused=$(docker inspect --format="{{ .State.Paused }}" ${container_name} 2> /dev/null)
exited=$(docker ps -a -f "status=exited" | grep "${container_name}")

#
# Make any necessary changes
#
if [ "" != "${exited}" ]; then
	docker rm $container_name
	running='false'
fi
if [ "true" == "${ghost}" ]; then
	docker kill $container_name
	docker rm   $container_name
	running='false'
fi
if [ "true" == "${paused}" ]; then
	docker start $container_name
	running='true'
fi

#
# Help screen
#
function show_help {
    echo
    echo "devenv [OPTIONS] [PATH]"
    echo
    echo "    If path is omitted, the current directory is assumed"
    echo
    echo "Options:"
    echo
    echo "    -h    Show help"
    echo "    -s    Stop a running environment for '${project_name}'"
    echo "    -r    Restart an environment for '${project_name}'"
    echo
}

#
# Stop a dev container
#
function stop_container {
	if [ "true" == $running ]; then
        echo "Stopping '${container_name}'..."
        docker stop $container_name > /dev/null
        echo "Removing '${container_name}'..."
        docker rm $container_name > /dev/null
	else
		echo "Container '${container_name}' is not running"
	fi
    running='false'
}

#
# Start a dev container
#
function start_container {
	if [ "true" == $running ]; then
		echo "Container '${container_name}' is already running"
	else
		echo "Starting dev container '${container_name}'..."
		docker run \
			-itd \
			-h ${project_name} \
			-e HOSTNAME=${project_name} \
			--add-host ${project_name}:127.0.0.1 \
			-e TERM=$TERM \
			-v ${project_path}:/project:rw \
			-v /var/run/docker.sock:/var/run/docker.sock \
			--name ${container_name} \
			mkenney/dev
	fi
}

if [ 1 == $show_help ]; then
    show_help
    exit 0;
fi

if [ 1 == $stop ]; then
    stop_container
    exit 0
fi

if [ 1 == $restart ]; then
    stop_container
fi

if [ "true" != $running ]; then
    start_container
fi

docker exec -ti $container_name script /dev/null -c 'sh /init.sh'
