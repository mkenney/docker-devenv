
# Set M-\ as the control key
set-option -g prefix M-space

# Toggle windows with double <prefix>
bind-key M-space last-window

# Always open new windows next to the current one
bind-key 'c' new-window -a

# Renumber windows when one is closed
set-option -g renumber-windows on

# Mouse settings.
setw -g mouse on
#set-option -g mouse-resize-pane on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on

# Terminal emulater settings
#setw -g utf8 on
#set -g status-utf8 on
set -g default-terminal "xterm"
set-window-option -g xterm-keys on

# Scrollback buffer size (number of lines)
set -g history-limit 15000

# Terminal titles
set-option -g set-titles on

# Screen index
set -g pane-base-index 1

# Don't pause for escape sequences
set -sg escape-time 0

# window split
bind - split-window -h
bind + split-window -v

# Reload config
bind r source-file ~/.tmux.conf \; display "reloaded .tmux.conf"

# Synchronize panes
bind e setw synchronize-panes

# window list options
setw -g automatic-rename on

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# status bar colors
set -g status-bg black
set -g status-fg white

# Non-powerline menu bar
if-shell '[ "true" != "$IS_DEVENV" ]' ' \
    set-option -g status-justify centre; \
    set-option -g status-left "#[fg=white,bold]#[fg=yellow,bold]#(hostname) "; \
    set-option -g status-left-length 60; \
    set-window-option -g window-status-format "#[fg=cyan,dim]#I:#[fg=yellow]#W#[fg=grey,dim]#F"; \
    set-window-option -g window-status-current-format "#[bg=black](#[fg=cyan,bold]#I:#[fg=red]#W#[fg=dim]#[fg=white])"; \
    set -g status-right "#[fg=green][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[fg=green]]"; \
'

# powerline menu bar
# linux: source "/usr/share/powerline/bindings/tmux/powerline.conf"
#  os x: source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
if-shell 'if [ "true" = "$IS_DEVENV" ] && [ "" = "$(ps aux | grep powerline-daemon | grep -v grep)" ]; then true; else false; fi' \
    'run-shell "powerline-daemon -q"'
if-shell 'if [ "true" = "$IS_DEVENV" ]; then true; else false; fi' \
    'source "/usr/local/powerline/powerline.conf"'
